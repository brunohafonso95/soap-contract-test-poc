{
  "stats": {
    "suites": 2,
    "tests": 6,
    "passes": 6,
    "pending": 0,
    "failures": 0,
    "start": "2019-04-24T17:59:12.593Z",
    "end": "2019-04-24T17:59:13.671Z",
    "duration": 1078,
    "testsRegistered": 6,
    "passPercent": 100,
    "pendingPercent": 0,
    "other": 0,
    "hasOther": false,
    "skipped": 0,
    "hasSkipped": false,
    "passPercentClass": "success",
    "pendingPercentClass": "danger"
  },
  "suites": {
    "uuid": "8e3ba1da-3a95-4370-82f8-66cf833fefd8",
    "title": "",
    "fullFile": "",
    "file": "",
    "beforeHooks": [],
    "afterHooks": [],
    "tests": [],
    "suites": [
      {
        "uuid": "5f865a46-61f8-458d-8c51-07ee1a43eccf",
        "title": "Countries Service",
        "fullFile": "C:\\Users\\bhenriquea\\soap-test\\src\\tests\\contract\\tests\\contries.spec.js",
        "file": "\\src\\tests\\contract\\tests\\contries.spec.js",
        "beforeHooks": [],
        "afterHooks": [],
        "tests": [
          {
            "title": "GetCountriesAvailable: deve retornar uma objeto que contém a lista dos países cadastrados no webservice.",
            "fullTitle": "Countries Service GetCountriesAvailable: deve retornar uma objeto que contém a lista dos países cadastrados no webservice.",
            "timedOut": false,
            "duration": 493,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "context": "[\n  \"Este teste tem como objetivo validar se o retorno da transação \\\"GetCountriesAvailable\\\" segue o modelo estabelecido que garante o pleno funcionamento dos demais serviços.\",\n  \"http://www.url.com/pathname\"\n]",
            "code": "addContext(this,\n    `Este teste tem como objetivo validar se o retorno da transação \"GetCountriesAvailable\" segue o modelo estabelecido que garante o pleno funcionamento dos demais serviços.`\n);\naddContext(this, 'http://www.url.com/pathname');\nrequest\n    .get('/getcountriesavailable')\n    .end((error, res) => {\n        joiAssert(res.body, countriesAvaliableModel);\n        done(error);\n    });",
            "err": {},
            "isRoot": false,
            "uuid": "10da9194-5947-4b58-802c-f9bc12db34cb",
            "isHook": false,
            "skipped": false
          }
        ],
        "suites": [],
        "passes": [
          "10da9194-5947-4b58-802c-f9bc12db34cb"
        ],
        "failures": [],
        "pending": [],
        "skipped": [],
        "duration": 493,
        "root": false,
        "rootEmpty": false,
        "_timeout": 10000
      },
      {
        "uuid": "4089fc1b-55de-4329-bce6-a61d860272db",
        "title": "Holidays Service",
        "fullFile": "C:\\Users\\bhenriquea\\soap-test\\src\\tests\\contract\\tests\\holidays.spec.js",
        "file": "\\src\\tests\\contract\\tests\\holidays.spec.js",
        "beforeHooks": [],
        "afterHooks": [],
        "tests": [
          {
            "title": "GetHolidaysAvailable: deve retornar uma objeto que contém a lista dos feriados de um determinado país.",
            "fullTitle": "Holidays Service GetHolidaysAvailable: deve retornar uma objeto que contém a lista dos feriados de um determinado país.",
            "timedOut": false,
            "duration": 152,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "context": "[\n  \"Este teste tem como objetivo validar se o retorno da transação \\\"GetHolidaysAvailable\\\" segue o modelo estabelecido que garante o pleno funcionamento dos demais serviços.\",\n  \"http://www.url.com/pathname\"\n]",
            "code": "addContext(this,\n    `Este teste tem como objetivo validar se o retorno da transação \"GetHolidaysAvailable\" segue o modelo estabelecido que garante o pleno funcionamento dos demais serviços.`\n);\naddContext(this, 'http://www.url.com/pathname');\nrequest\n    .get('/getholidaysavailable')\n    .end((error, res) => {\n        joiAssert(res.body, holidaysAvailableModel);\n        done(error);\n    });",
            "err": {},
            "isRoot": false,
            "uuid": "2a191901-b7c8-47f1-b0f1-40f48231e944",
            "isHook": false,
            "skipped": false
          },
          {
            "title": "GetHolidaysForMonth: deve retornar um objeto que contém a lista de feriados por mês de um determinado país a partir do mês e ano especificos.",
            "fullTitle": "Holidays Service GetHolidaysForMonth: deve retornar um objeto que contém a lista de feriados por mês de um determinado país a partir do mês e ano especificos.",
            "timedOut": false,
            "duration": 75,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "context": "[\n  \"Este teste tem como objetivo validar se o retorno da transação \\\"GetHolidaysForMonth\\\" segue o modelo estabelecido que garante o pleno funcionamento dos demais serviços.\",\n  \"http://www.url.com/pathname\"\n]",
            "code": "addContext(this,\n    `Este teste tem como objetivo validar se o retorno da transação \"GetHolidaysForMonth\" segue o modelo estabelecido que garante o pleno funcionamento dos demais serviços.`\n);\naddContext(this, 'http://www.url.com/pathname');\nrequest\n    .get('/getholidaysformonth')\n    .end((error, res) => {\n        joiAssert(res.body, holidaysForMonthModel);\n        done(error);\n    });",
            "err": {},
            "isRoot": false,
            "uuid": "818ab95c-25c4-4ead-8d3b-96eb0b24f29e",
            "isHook": false,
            "skipped": false
          },
          {
            "title": "GetHolidaysForYear: deve retornar uma objeto que contém uma lista dos feriados de um determinado país e de um terminado ano.",
            "fullTitle": "Holidays Service GetHolidaysForYear: deve retornar uma objeto que contém uma lista dos feriados de um determinado país e de um terminado ano.",
            "timedOut": false,
            "duration": 83,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "context": "[\n  \"Este teste tem como objetivo validar se o retorno da transação \\\"GetHolidaysForYear\\\" segue o modelo estabelecido que garante o pleno funcionamento dos demais serviços.\",\n  \"http://www.url.com/pathname\"\n]",
            "code": "addContext(this,\n    `Este teste tem como objetivo validar se o retorno da transação \"GetHolidaysForYear\" segue o modelo estabelecido que garante o pleno funcionamento dos demais serviços.`\n);\naddContext(this, 'http://www.url.com/pathname');\nrequest\n    .get('/getholidaysforyear')\n    .end((error, res) => {\n        joiAssert(res.body, holidaysForYearModel);\n        done(error);\n    });",
            "err": {},
            "isRoot": false,
            "uuid": "274f9a93-5f01-4ff6-8ccb-9dd4aa6578d5",
            "isHook": false,
            "skipped": false
          },
          {
            "title": "GetHolidaysForDateRange: deve retornar um objeto que contém uma lista dos feriados cadastrados de um determinado país a partir de uma data de unicio/fim.",
            "fullTitle": "Holidays Service GetHolidaysForDateRange: deve retornar um objeto que contém uma lista dos feriados cadastrados de um determinado país a partir de uma data de unicio/fim.",
            "timedOut": false,
            "duration": 128,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "context": "[\n  \"Este teste tem como objetivo validar se o retorno da transação \\\"GetHolidaysForDateRange\\\" segue o modelo estabelecido que garante o pleno funcionamento dos demais serviços.\",\n  \"http://www.url.com/pathname\"\n]",
            "code": "addContext(this,\n    `Este teste tem como objetivo validar se o retorno da transação \"GetHolidaysForDateRange\" segue o modelo estabelecido que garante o pleno funcionamento dos demais serviços.`\n);\naddContext(this, 'http://www.url.com/pathname');\nrequest\n    .get('/getholidaysfordaterange')\n    .end((error, res) => {\n        joiAssert(res.body, HolidaysForDateRangeModel);\n        done(error);\n    });",
            "err": {},
            "isRoot": false,
            "uuid": "0ba80270-3b07-4150-b795-e9bee7d41e6c",
            "isHook": false,
            "skipped": false
          },
          {
            "title": "GetHolidayDate: deve retonar uma objeto que contém a data de um feriado a partir do país, código do feriado e ano inseridos.",
            "fullTitle": "Holidays Service GetHolidayDate: deve retonar uma objeto que contém a data de um feriado a partir do país, código do feriado e ano inseridos.",
            "timedOut": false,
            "duration": 85,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "context": "[\n  \"Este teste tem como objetivo validar se o retorno da transação \\\"GetHolidayDate\\\" segue o modelo estabelecido que garante o pleno funcionamento dos demais serviços.\",\n  \"http://www.url.com/pathname\"\n]",
            "code": "addContext(this,\n    `Este teste tem como objetivo validar se o retorno da transação \"GetHolidayDate\" segue o modelo estabelecido que garante o pleno funcionamento dos demais serviços.`\n);\naddContext(this, 'http://www.url.com/pathname');\nrequest\n    .get('/getholidaydate')\n    .end((error, res) => {\n        joiAssert(res.body, holidayDateResultModel);\n        done(error);\n    });",
            "err": {},
            "isRoot": false,
            "uuid": "76633be7-9149-46d0-8537-7ff5cec771a8",
            "isHook": false,
            "skipped": false
          }
        ],
        "suites": [],
        "passes": [
          "2a191901-b7c8-47f1-b0f1-40f48231e944",
          "818ab95c-25c4-4ead-8d3b-96eb0b24f29e",
          "274f9a93-5f01-4ff6-8ccb-9dd4aa6578d5",
          "0ba80270-3b07-4150-b795-e9bee7d41e6c",
          "76633be7-9149-46d0-8537-7ff5cec771a8"
        ],
        "failures": [],
        "pending": [],
        "skipped": [],
        "duration": 523,
        "root": false,
        "rootEmpty": false,
        "_timeout": 10000
      }
    ],
    "passes": [],
    "failures": [],
    "pending": [],
    "skipped": [],
    "duration": 0,
    "root": true,
    "rootEmpty": true,
    "_timeout": 10000
  },
  "copyrightYear": 2019
}