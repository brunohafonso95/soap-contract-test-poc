{
  "stats": {
    "suites": 2,
    "tests": 6,
    "passes": 6,
    "pending": 0,
    "failures": 0,
    "start": "2019-04-07T22:35:14.043Z",
    "end": "2019-04-07T22:35:18.964Z",
    "duration": 4921,
    "testsRegistered": 6,
    "passPercent": 100,
    "pendingPercent": 0,
    "other": 0,
    "hasOther": false,
    "skipped": 0,
    "hasSkipped": false,
    "passPercentClass": "success",
    "pendingPercentClass": "danger"
  },
  "suites": {
    "uuid": "37e69355-83f5-4046-9664-17fc1478a6e4",
    "title": "",
    "fullFile": "",
    "file": "",
    "beforeHooks": [],
    "afterHooks": [],
    "tests": [],
    "suites": [
      {
        "uuid": "bfb83e38-6407-4c4e-833d-f7fcb8702777",
        "title": "Countries Service",
        "fullFile": "C:\\Users\\bhenriquea\\soap-test\\src\\tests\\contract\\tests\\contries.spec.js",
        "file": "\\src\\tests\\contract\\tests\\contries.spec.js",
        "beforeHooks": [],
        "afterHooks": [],
        "tests": [
          {
            "title": "GetCountriesAvailable: deve retornar uma objeto que contém a lista dos países cadastrados no webservice.",
            "fullTitle": "Countries Service GetCountriesAvailable: deve retornar uma objeto que contém a lista dos países cadastrados no webservice.",
            "timedOut": false,
            "duration": 1528,
            "state": "passed",
            "speed": "slow",
            "pass": true,
            "fail": false,
            "pending": false,
            "context": "[\n  \"Este teste tem como objetivo validar se o retorno da transação \\\"GetCountriesAvailable\\\" segue o modelo estabelecido que garante o pleno funcionamento dos demais serviços.\",\n  \"http://www.url.com/pathname\"\n]",
            "code": "addContext(this,\n    `Este teste tem como objetivo validar se o retorno da transação \"GetCountriesAvailable\" segue o modelo estabelecido que garante o pleno funcionamento dos demais serviços.`\n);\naddContext(this, 'http://www.url.com/pathname');\nrequest\n    .get('/getcountriesavailable')\n    .end((error, res) => {\n        joiAssert(res.body, countriesAvaliableModel);\n        done(error);\n    });",
            "err": {},
            "isRoot": false,
            "uuid": "4f65ffa0-0b05-4f7d-92c1-e0133c434e88",
            "isHook": false,
            "skipped": false
          }
        ],
        "suites": [],
        "passes": [
          "4f65ffa0-0b05-4f7d-92c1-e0133c434e88"
        ],
        "failures": [],
        "pending": [],
        "skipped": [],
        "duration": 1528,
        "root": false,
        "rootEmpty": false,
        "_timeout": 5000
      },
      {
        "uuid": "b4d53369-75aa-4204-a0f7-2db03fe8bcca",
        "title": "Holidays Service",
        "fullFile": "C:\\Users\\bhenriquea\\soap-test\\src\\tests\\contract\\tests\\holidays.spec.js",
        "file": "\\src\\tests\\contract\\tests\\holidays.spec.js",
        "beforeHooks": [],
        "afterHooks": [],
        "tests": [
          {
            "title": "GetHolidaysAvailable: deve retornar uma objeto que contém a lista dos feriados de um determinado país.",
            "fullTitle": "Holidays Service GetHolidaysAvailable: deve retornar uma objeto que contém a lista dos feriados de um determinado país.",
            "timedOut": false,
            "duration": 469,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "context": "[\n  \"Este teste tem como objetivo validar se o retorno da transação \\\"GetHolidaysAvailable\\\" segue o modelo estabelecido que garante o pleno funcionamento dos demais serviços.\",\n  \"http://www.url.com/pathname\"\n]",
            "code": "addContext(this,\n    `Este teste tem como objetivo validar se o retorno da transação \"GetHolidaysAvailable\" segue o modelo estabelecido que garante o pleno funcionamento dos demais serviços.`\n);\naddContext(this, 'http://www.url.com/pathname');\nrequest\n    .get('/getholidaysavailable')\n    .end((error, res) => {\n        joiAssert(res.body, holidaysAvailableModel);\n        done(error);\n    });",
            "err": {},
            "isRoot": false,
            "uuid": "b7f841e3-f008-4291-8537-213ecb7872ad",
            "isHook": false,
            "skipped": false
          },
          {
            "title": "GetHolidaysForMonth: deve retornar um objeto que contém a lista de feriados por mês de um determinado país a partir do mês e ano especificos.",
            "fullTitle": "Holidays Service GetHolidaysForMonth: deve retornar um objeto que contém a lista de feriados por mês de um determinado país a partir do mês e ano especificos.",
            "timedOut": false,
            "duration": 457,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "context": "[\n  \"Este teste tem como objetivo validar se o retorno da transação \\\"GetHolidaysForMonth\\\" segue o modelo estabelecido que garante o pleno funcionamento dos demais serviços.\",\n  \"http://www.url.com/pathname\"\n]",
            "code": "addContext(this,\n    `Este teste tem como objetivo validar se o retorno da transação \"GetHolidaysForMonth\" segue o modelo estabelecido que garante o pleno funcionamento dos demais serviços.`\n);\naddContext(this, 'http://www.url.com/pathname');\nrequest\n    .get('/getholidaysformonth')\n    .end((error, res) => {\n        joiAssert(res.body, holidaysForMonthModel);\n        done(error);\n    });",
            "err": {},
            "isRoot": false,
            "uuid": "9a2ac26c-f9b8-42b8-a2c4-09bc877f1279",
            "isHook": false,
            "skipped": false
          },
          {
            "title": "GetHolidaysForYear: deve retornar uma objeto que contém uma lista dos feriados de um determinado país e de um terminado ano.",
            "fullTitle": "Holidays Service GetHolidaysForYear: deve retornar uma objeto que contém uma lista dos feriados de um determinado país e de um terminado ano.",
            "timedOut": false,
            "duration": 553,
            "state": "passed",
            "speed": "medium",
            "pass": true,
            "fail": false,
            "pending": false,
            "context": "[\n  \"Este teste tem como objetivo validar se o retorno da transação \\\"GetHolidaysForYear\\\" segue o modelo estabelecido que garante o pleno funcionamento dos demais serviços.\",\n  \"http://www.url.com/pathname\"\n]",
            "code": "addContext(this,\n    `Este teste tem como objetivo validar se o retorno da transação \"GetHolidaysForYear\" segue o modelo estabelecido que garante o pleno funcionamento dos demais serviços.`\n);\naddContext(this, 'http://www.url.com/pathname');\nrequest\n    .get('/getholidaysforyear')\n    .end((error, res) => {\n        joiAssert(res.body, holidaysForYearModel);\n        done(error);\n    });",
            "err": {},
            "isRoot": false,
            "uuid": "be1cedec-e3c1-4015-bbba-c75d92083459",
            "isHook": false,
            "skipped": false
          },
          {
            "title": "GetHolidaysForDateRange: deve retornar um objeto que contém uma lista dos feriados cadastrados de um determinado país a partir de uma data de unicio/fim.",
            "fullTitle": "Holidays Service GetHolidaysForDateRange: deve retornar um objeto que contém uma lista dos feriados cadastrados de um determinado país a partir de uma data de unicio/fim.",
            "timedOut": false,
            "duration": 1385,
            "state": "passed",
            "speed": "slow",
            "pass": true,
            "fail": false,
            "pending": false,
            "context": "[\n  \"Este teste tem como objetivo validar se o retorno da transação \\\"GetHolidaysForDateRange\\\" segue o modelo estabelecido que garante o pleno funcionamento dos demais serviços.\",\n  \"http://www.url.com/pathname\"\n]",
            "code": "addContext(this,\n    `Este teste tem como objetivo validar se o retorno da transação \"GetHolidaysForDateRange\" segue o modelo estabelecido que garante o pleno funcionamento dos demais serviços.`\n);\naddContext(this, 'http://www.url.com/pathname');\nrequest\n    .get('/getholidaysfordaterange')\n    .end((error, res) => {\n        joiAssert(res.body, HolidaysForDateRangeModel);\n        done(error);\n    });",
            "err": {},
            "isRoot": false,
            "uuid": "9ca4a7d2-4965-4c3d-b71f-2a90e6a8cb39",
            "isHook": false,
            "skipped": false
          },
          {
            "title": "GetHolidayDate: deve retonar uma objeto que contém a data de um feriado a partir do país, código do feriado e ano inseridos.",
            "fullTitle": "Holidays Service GetHolidayDate: deve retonar uma objeto que contém a data de um feriado a partir do país, código do feriado e ano inseridos.",
            "timedOut": false,
            "duration": 465,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "context": "[\n  \"Este teste tem como objetivo validar se o retorno da transação \\\"GetHolidayDate\\\" segue o modelo estabelecido que garante o pleno funcionamento dos demais serviços.\",\n  \"http://www.url.com/pathname\"\n]",
            "code": "addContext(this,\n    `Este teste tem como objetivo validar se o retorno da transação \"GetHolidayDate\" segue o modelo estabelecido que garante o pleno funcionamento dos demais serviços.`\n);\naddContext(this, 'http://www.url.com/pathname');\nrequest\n    .get('/getholidaydate')\n    .end((error, res) => {\n        joiAssert(res.body, holidayDateResultModel);\n        done(error);\n    });",
            "err": {},
            "isRoot": false,
            "uuid": "c01607f5-53a4-4060-b0a6-592fa3da3d0c",
            "isHook": false,
            "skipped": false
          }
        ],
        "suites": [],
        "passes": [
          "b7f841e3-f008-4291-8537-213ecb7872ad",
          "9a2ac26c-f9b8-42b8-a2c4-09bc877f1279",
          "be1cedec-e3c1-4015-bbba-c75d92083459",
          "9ca4a7d2-4965-4c3d-b71f-2a90e6a8cb39",
          "c01607f5-53a4-4060-b0a6-592fa3da3d0c"
        ],
        "failures": [],
        "pending": [],
        "skipped": [],
        "duration": 3329,
        "root": false,
        "rootEmpty": false,
        "_timeout": 5000
      }
    ],
    "passes": [],
    "failures": [],
    "pending": [],
    "skipped": [],
    "duration": 0,
    "root": true,
    "rootEmpty": true,
    "_timeout": 5000
  },
  "copyrightYear": 2019
}